Quest 00. 형상관리 시스템

 checklist
    1) 형상관리 시스템은 왜 나오게 되었나요?
        - 프로젝트 운영상 발생 가능한 위험이나 혼란을 줄이고 프로젝트를 체계적으로 관리하기 위해
        
    2) git은 어떤 형상관리 시스템이고 어떤 특징을 가지고 있을까요? 분산형 형상관리 시스템이란 무엇일까요?
        - 분산형 버전관리 시스템으로 branch와 merge, 분산형이므로 네트워크와 비교할 필요가 없어 가볍고 빠르고, 분산 작업이 가능하고, 무결성을 보장을 통한 version history 관리 가능 (체크섬(16진수 CommitID) 검사를 통한 보장)
        - 중앙집중식 버전관리 시스템은 많은 클라이언트가 중앙 서버로부터 파일을 받아서 수정하는 방식이고,
          분산형 버전관리 시스템은 클라이언트가 서버로부터 repository(저장소)를 통째로 복사하여 수정하는 방식이다.
          위 두가지 방식은 사용함에 있어 큰 차이는 속도 차이지만 특이한 사항을 제외하고선 다른게 없음(중앙집중식은 중앙서버 저장소에서 파일이 삭제 되면 복구 방법이 없으나 분산형은 저장소가 각자 로컬에도 저장되어 있어 복구가 간편함)
    
    3) git과 GitHub은 어떻게 다를까요?
        - 각자의 PC 의 git repository 가 존재하며 원격저장소를 통해 협업과 관리가 용이하도록 원격 저장소를 제공해주는 플랫폼이 GitHub다.
    
    4) git의 clone/add/commit/push/pull/branch/stash 명령은 무엇이며 어떨 때 이용하나요? 그리고 어떻게 사용하나요?
         - clone  : 원격저장소의 git repository 를 복사할 때 사용하는 명령어
         - add    : 변경 사항을 해당 branch 스테이지에 올리기 위한 명령어
         - commit : 스테이지에 올라간 변경사항을 해당 git에 저장하기 위한 명령어
         - push   : commit된 사항을 remote에 저장하기 위한 명령어
         - pull   : 원격저장소에 저장된 변경사항을 가져오기 위한 명령어
         - branch : 원격저장소의 branch 목록을 조회하거나 새로운 branch 생성하거나 checkout 및 branch 를 움직이기 위하여 사용하는 명령어
         - stash  : 현재 변경사항을 새로운 stash를 생성하여 영역에 보내거나 해당 stash 내용을 현재 저장소에 적용시키기 위한 명령어